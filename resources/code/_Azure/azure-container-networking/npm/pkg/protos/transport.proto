syntax = "proto3";
package protos;
option go_package = "github.com/Azure/azure-container-networking/npm/pkg/protos;protos";

// DataplaneEvents represents the Service RPC exposed by the gRPC server.
service DataplaneEvents{
	rpc Connect(DatapathPodMetadata) returns (stream Events);
}

// DatapathPodMetadata is the metadata for a datapath pod
message DatapathPodMetadata {
  string pod_name = 1; // Daemonset Pod ID
  string node_name = 2; // Node name
  enum APIVersion {
    V1 = 0;
  }
  APIVersion apiVersion = 3; // Controlplane API version to support backwards compatibility
}

// Events defines the operation (event type) and object type being
// streamed to the datapath client. A events message may carry one or
// more Event objects.
message Events {
  enum EventType 
  {
    GoalState = 0;
    Hydration = 1;
  };
  EventType eventType = 1;
  // Payload can contain one or more Event objects.
  map<string, GoalState> payload = 2;
}

// Event is a generic object that can be Created, 
// Updated, Deleted by the controlplane.
message GoalState {
  // Data can contain one or more instances of IPSet or NetworkPolicy
  // objects.
	bytes data = 1;
}
