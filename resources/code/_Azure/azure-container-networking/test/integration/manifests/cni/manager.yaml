apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: azure-cni-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      acn: azure-cni-manager
  template:
    metadata:
      labels:
        acn: azure-cni-manager
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
      hostNetwork: true
      containers:
        - name: azure-cni-installer
          image: acnpublic.azurecr.io/acncli:v1.4.28-42-gd086cf1b
          command: ["./acn"]
          args: ["cni", "manager", "--follow", "--mode", "transparent", "--ipam", "azure-cns"]
          imagePullPolicy: Always
          env:
            - name: AZURE_CNI_OS
              value: linux
            - name: AZURE_CNI_TENANCY
              value: singletenancy
            - name: AZURE_CNI_MODE
              value: transparent
            - name: AZURE_CNI_IPAM
              value: azure-vnet-ipam
            - name: AZURE_CNI_EXEMPT
              value: azure-vnet-telemetry,azure-vnet-telemetry.config
          volumeMounts:
            - name: cni-bin
              mountPath: /opt/cni/bin
            - name: cni-conflist
              mountPath: /etc/cni/net.d
            - name: cni-datapath-log
              mountPath: /var/log/azure-vnet.log
      restartPolicy: Always
      volumes:
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
            type: Directory
        - name: cni-datapath-log
          hostPath:
            path: /var/log/azure-vnet.log
            type: File
        - name: cni-conflist
          hostPath:
            path: /etc/cni/net.d
            type: Directory
