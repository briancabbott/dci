// Code generated by MockGen. DO NOT EDIT.
// Source: /mnt/d/Projects/azure-container-networking/platform/windows/adapter/network_adapter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNetworkAdapter is a mock of NetworkAdapter interface.
type MockNetworkAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkAdapterMockRecorder
}

// MockNetworkAdapterMockRecorder is the mock recorder for MockNetworkAdapter.
type MockNetworkAdapterMockRecorder struct {
	mock *MockNetworkAdapter
}

// NewMockNetworkAdapter creates a new mock instance.
func NewMockNetworkAdapter(ctrl *gomock.Controller) *MockNetworkAdapter {
	mock := &MockNetworkAdapter{ctrl: ctrl}
	mock.recorder = &MockNetworkAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkAdapter) EXPECT() *MockNetworkAdapterMockRecorder {
	return m.recorder
}

// GetAdapterName mocks base method.
func (m *MockNetworkAdapter) GetAdapterName() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdapterName")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdapterName indicates an expected call of GetAdapterName.
func (mr *MockNetworkAdapterMockRecorder) GetAdapterName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdapterName", reflect.TypeOf((*MockNetworkAdapter)(nil).GetAdapterName))
}

// GetPriorityVLANTag mocks base method.
func (m *MockNetworkAdapter) GetPriorityVLANTag() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPriorityVLANTag")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPriorityVLANTag indicates an expected call of GetPriorityVLANTag.
func (mr *MockNetworkAdapterMockRecorder) GetPriorityVLANTag() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPriorityVLANTag", reflect.TypeOf((*MockNetworkAdapter)(nil).GetPriorityVLANTag))
}

// SetPriorityVLANTag mocks base method.
func (m *MockNetworkAdapter) SetPriorityVLANTag(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPriorityVLANTag", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPriorityVLANTag indicates an expected call of SetPriorityVLANTag.
func (mr *MockNetworkAdapterMockRecorder) SetPriorityVLANTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPriorityVLANTag", reflect.TypeOf((*MockNetworkAdapter)(nil).SetPriorityVLANTag), arg0)
}
